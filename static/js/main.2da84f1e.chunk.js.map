{"version":3,"sources":["components/FirebaseConfig.js","components/Home/Home.js","components/Navigation/Navigation.js","components/Shopping/Shopping.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","homeDb","getFirestore","Home","useEffect","getTodos","a","tempTodoList","getDocs","collection","forEach","doc","push","data","Id","id","setTodoList","console","log","useState","todoList","handleCheck","todo","input","setDoc","IsDone","merge","handleAddNew","isChecked","document","getElementById","checked","newName","value","newTodo","Name","addDoc","handleChangeName","e","editedTodo","target","className","type","placeholder","onClick","icon","faPlus","size","map","defaultChecked","onBlur","defaultValue","Navigation","faBars","to","faHome","faShoppingCart","Component","Shopping","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2da84f1e.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC_2hx1L7K4DP1rFlgGPaln_BLEJSX9t2s\",\r\n  authDomain: \"home-db-701a9.firebaseapp.com\",\r\n  projectId: \"home-db-701a9\",\r\n  storageBucket: \"home-db-701a9.appspot.com\",\r\n  messagingSenderId: \"300040980853\",\r\n  appId: \"1:300040980853:web:538c45f9f7220e4fedab3c\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst homeDb = getFirestore(app);\r\n\r\nexport default homeDb;","import React, { useEffect, useState } from 'react';\r\nimport  homeDb  from '../FirebaseConfig';\r\nimport { collection, addDoc, getDocs, doc, setDoc} from \"firebase/firestore\";\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\n\r\n const Home = ()=>{\r\n\r\n    useEffect(()=>{\r\n         \r\n        \r\n       const getTodos = async() =>{\r\n        let tempTodoList = [];\r\n        const todoList = await getDocs(collection(homeDb, \"todos\"));  \r\n        todoList.forEach((doc=>{\r\n            tempTodoList.push({...doc.data(), Id: doc.id});\r\n            \r\n        }));  \r\n        setTodoList(tempTodoList);\r\n        console.log(tempTodoList);\r\n    }       \r\n       getTodos();\r\n\r\n    },[]);\r\n    const [todoList, setTodoList] = useState([]);\r\n    const handleCheck = async (todo, input)=>{\r\n        await setDoc(doc(homeDb, \"todos\", todo.Id), {            \r\n            IsDone: !todo.IsDone,            \r\n          }, { merge: true });\r\n    }\r\n\r\n    const handleAddNew = async ()=>{\r\n        let isChecked = document.getElementById(\"newCheckBox\").checked;\r\n        let newName = document.getElementById(\"newName\").value;\r\n        let newTodo =  {   \r\n            Name: newName,         \r\n            IsDone: isChecked,            \r\n          };\r\n        await addDoc(collection(homeDb, \"todos\"),newTodo);\r\n          setTodoList([...todoList, newTodo]);\r\n          document.getElementById(\"newName\").value = \"\";\r\n    }\r\n    const handleChange = (e, todo)=>{\r\n        let cloneOfTodos = [...todoList];\r\n        cloneOfTodos.forEach((todoInList)=>{\r\n           \r\n            if(todoInList.Id === todo.Id){               \r\n                todoInList.Name = e.target.value;  \r\n                setTodoList(cloneOfTodos);\r\n                return;              \r\n            }\r\n        });\r\n    }\r\n    const handleChangeName = async (e, editedTodo) =>{\r\n        //let todoTobeEdited = todoList.find(x=> x.Id === editedTodo.Id);\r\n        if(e.target.value && e.target.value !== editedTodo.Name){\r\n            console.log(true);\r\n            await setDoc(doc(homeDb, \"todos\", editedTodo.Id), {            \r\n                Name: e.target.value,            \r\n              }, { merge: true });\r\n              console.log(\"done\");\r\n        }\r\n    }\r\n    \r\n        return (\r\n            <div className=\"todo-list-container\">\r\n                <h1>To do - List</h1>\r\n                <ul className=\"todo-list\">\r\n                <li key={0}>\r\n                                <input id=\"newCheckBox\" type=\"checkbox\"></input>\r\n                                <input id=\"newName\" type=\"text\" placeholder=\"Do something Cool\"></input>\r\n                                <button className=\"add-new-button\" onClick={handleAddNew}><FontAwesomeIcon icon={faPlus} size=\"lg\" /></button>\r\n                            </li> \r\n                    {\r\n                        todoList.map((todo)=>{\r\n                            let isChecked = todo.IsDone ? \"checked\" : \"\";\r\n                            \r\n                            return (                                \r\n                             <li>\r\n                                <input type=\"checkbox\" defaultChecked={isChecked} onClick={()=>{handleCheck(todo, this)}} ></input>\r\n                                <input onBlur={(e)=>{handleChangeName(e, todo)}}  className=\"on-blur\" type=\"text\" defaultValue={todo.Name}></input>\r\n                            </li>)                            \r\n                        })\r\n                    }    \r\n                           \r\n                </ul>\r\n            </div>\r\n        );\r\n\r\n}\r\n\r\nexport default Home;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { faBars,faHome, faShoppingCart } from '@fortawesome/free-solid-svg-icons'\r\nimport './Navigation.scss'\r\n\r\nexport default class Navigation extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"menuContainer\">\r\n                <div className=\"menu\" id=\"menuButton\">\r\n                <FontAwesomeIcon icon={faBars} size=\"lg\" />\r\n                </div>\r\n                <ul>\r\n                    <li>\r\n                    <Link to=\"home\">\r\n                    <FontAwesomeIcon icon={faHome} size=\"lg\" />\r\n                    </Link>\r\n                    </li>\r\n                    <li>\r\n                    <Link to=\"shopping\"><FontAwesomeIcon icon={faShoppingCart} size=\"lg\" /></Link>\r\n                    </li>\r\n                    \r\n                   \r\n                    \r\n                </ul>\r\n              \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Shopping extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Shopping</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from \"./components/Home/Home\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Shopping from \"./components/Shopping/Shopping\";\n\nfunction App() {\n  return (\n    <div className=\"app-content\">\n    <Router>\n          \n          {/* A <Switch> looks through its children <Route>s and\n                renders the first one that matches the current URL. */}\n            <Switch>\n              <Route path=\"/home\">\n                <Home />\n              </Route>\n              <Route path=\"/shopping\">\n                <Shopping />\n              </Route>\n            </Switch>\n            <Navigation></Navigation>\n        </Router>     \n    </div>\n     );\n    \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}